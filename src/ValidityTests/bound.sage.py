

# This file was *autogenerated* from the file src/ValidityTests/bound.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_31 = Integer(31); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
import sys
from sage.all import *
from cypari2 import pari

pari.allocatemem(_sage_const_2 **_sage_const_31 )

R = PolynomialRing(ZZ, 'x')
x = R.gen()

# Lire le polynôme depuis le fichier
with open("src/bin/tmp_bound.txt", "r") as f:
    poly_str = f.read().strip()

P = R(poly_str)

try:
    roots = P.roots(ring=RR, multiplicities=False)
    positive_roots = [r for r in roots if r > _sage_const_0 ]
    if positive_roots:
        max_positive_root = max(positive_roots)
    else:
        max_positive_root = _sage_const_0 
except Exception as e:
    print("Erreur dans le calcul des racines :", e)
    max_positive_root = -_sage_const_1 

# Sauvegarde dans un autre fichier pour éviter l'écrasement du polynôme
with open("src/bin/sage_bound.txt", "w") as o:
    o.write(str(ceil(max_positive_root)))

